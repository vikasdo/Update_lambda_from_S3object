# This is a basic workflow to help you get started with Actions

name: CI
env:
  S3_BUCKET_NAME              : "deployment-package1"
  DS_DEPLOY_PACKAGE_NAME      : "bgjobs_ds_package_$(date +%Y%m%d).zip"
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Configure AWS credentials from vikas-test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2
          
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t .
          zip -r ${{ env.DS_DEPLOY_PACKAGE_NAME }} ./  -x  *.git*
      - name: Copy our DS Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DS_DEPLOY_PACKAGE_NAME }} s3://${{ env.S3_BUCKET_NAME}}/

      - name: Publish layer
        run: |
          aws lambda publish-layer-version --layer-name  "publish_sklearn"  --content S3Bucket=deployment-package1 , S3Key=${{ env.DS_DEPLOY_PACKAGE_NAME }} --compatible-runtimes python3.8
          echo 'ARN<<EOF' >> $GITHUB_ENV
          aws lambda list-layer-versions --layer-name "publish_sklearn" --region us-east-2 --query LayerVersions[0].LayerVersionArn>> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: add layer to lambda

        run: |
           
            aws lambda update-function-configuration --function-name SKLEARN-TEST --layers  ${{ env.ARN }}

      - name: Test
        run: echo ${{ env.ARN }}
        
        
       
 
      
    
    
